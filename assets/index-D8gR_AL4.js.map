{"version":3,"mappings":"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","names":["__vitePreload","n","THREE","Water","Sky","e","scene","camera","renderer","riverGeometry","waterNormals","texture","error","river","canyonMaterial","leftWall","rightWall","createTree","x","z","treeGroup","trunkGeometry","trunkMaterial","trunk","topGeometry","topMaterial","top","i","sky","sunDirection","sunPosition","light","ambientLight","createKayaker","kayakerGroup","kayakGeometry","kayakMaterial","kayak","paddlerGeometry","paddlerMaterial","paddler","kayaker","kayakerSpeed","kayakerRotationSpeed","kayakerPosition","kayakerRotation","keys","animate","time","onWindowResize"],"ignoreList":[],"sources":["../../main.js"],"sourcesContent":["// Import dependencies and initialize\nPromise.all([\n    import('three'),\n    import('three/examples/jsm/objects/Water.js'),\n    import('three/examples/jsm/objects/Sky.js')\n]).then(([{ default: THREE }, { Water }, { Sky }]) => {\n    // Prevent scrolling\n    window.addEventListener('scroll', (e) => {\n        e.preventDefault();\n        window.scrollTo(0, 0);\n    }, { passive: false });\n\n    window.addEventListener('touchmove', (e) => {\n        e.preventDefault();\n    }, { passive: false });\n\n    window.addEventListener('wheel', (e) => {\n        e.preventDefault();\n    }, { passive: false });\n\n    // Create scene, camera, and renderer\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({ \n        antialias: true,\n        alpha: true\n    });\n\n    // Set renderer size and position\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.setClearColor(0x000000, 0);\n    renderer.toneMapping = THREE.ACESFilmicToneMapping;\n    renderer.toneMappingExposure = 1;\n\n    // Append renderer to body and ensure it's positioned correctly\n    document.body.appendChild(renderer.domElement);\n    renderer.domElement.style.position = 'fixed';\n    renderer.domElement.style.top = '0';\n    renderer.domElement.style.left = '0';\n    renderer.domElement.style.width = '100%';\n    renderer.domElement.style.height = '100%';\n\n    // Create river\n    const riverGeometry = new THREE.PlaneGeometry(100, 1000);\n    const waterNormals = new THREE.TextureLoader().load('./textures/waternormals.jpg', \n        function(texture) {\n            texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n            texture.repeat.set(4, 4);\n            console.log('Water normals texture loaded successfully');\n        },\n        undefined,\n        function(error) {\n            console.error('Error loading water normals texture:', error);\n        }\n    );\n\n    const river = new Water(riverGeometry, {\n        textureWidth: 512,\n        textureHeight: 512,\n        waterNormals: waterNormals,\n        sunDirection: new THREE.Vector3(),\n        sunColor: 0xffffff,\n        waterColor: 0x006994,\n        distortionScale: 3.7,\n        fog: scene.fog !== undefined\n    });\n\n    // Initialize water uniforms\n    if (river.material && river.material.uniforms) {\n        river.material.uniforms['time'].value = 0;\n        river.material.uniforms['sunDirection'].value.set(0, 1, 0);\n        console.log('Water uniforms initialized successfully');\n    } else {\n        console.error('Water material or uniforms not initialized properly');\n    }\n\n    river.rotation.x = -Math.PI / 2;\n    river.position.y = 0;\n    scene.add(river);\n\n    // Create canyon walls\n    const canyonMaterial = new THREE.MeshStandardMaterial({ \n        color: 0x8B4513,\n        roughness: 0.8,\n        metalness: 0.2\n    });\n\n    // Left wall\n    const leftWall = new THREE.Mesh(\n        new THREE.PlaneGeometry(1000, 100),\n        canyonMaterial\n    );\n    leftWall.position.set(-50, 50, 0);\n    leftWall.rotation.y = Math.PI / 2;\n    scene.add(leftWall);\n\n    // Right wall\n    const rightWall = new THREE.Mesh(\n        new THREE.PlaneGeometry(1000, 100),\n        canyonMaterial\n    );\n    rightWall.position.set(50, 50, 0);\n    rightWall.rotation.y = -Math.PI / 2;\n    scene.add(rightWall);\n\n    // Create trees\n    function createTree(x, z) {\n        const treeGroup = new THREE.Group();\n        \n        // Tree trunk\n        const trunkGeometry = new THREE.CylinderGeometry(0.5, 0.8, 5, 8);\n        const trunkMaterial = new THREE.MeshStandardMaterial({ color: 0x4A2F10 });\n        const trunk = new THREE.Mesh(trunkGeometry, trunkMaterial);\n        trunk.position.y = 2.5;\n        treeGroup.add(trunk);\n        \n        // Tree top\n        const topGeometry = new THREE.ConeGeometry(3, 6, 8);\n        const topMaterial = new THREE.MeshStandardMaterial({ color: 0x2D5A27 });\n        const top = new THREE.Mesh(topGeometry, topMaterial);\n        top.position.y = 7;\n        treeGroup.add(top);\n        \n        treeGroup.position.set(x, 0, z);\n        return treeGroup;\n    }\n\n    // Add trees along the canyon walls\n    for (let i = -400; i <= 400; i += 50) {\n        scene.add(createTree(-45, i));\n        scene.add(createTree(45, i));\n    }\n\n    // Add sky\n    const sky = new Sky();\n    sky.scale.setScalar(10000);\n    scene.add(sky);\n\n    // Initialize sun direction\n    const sunDirection = new THREE.Vector3();\n    const sunPosition = new THREE.Vector3();\n\n    // Add lights\n    const light = new THREE.DirectionalLight(0xffffff, 1);\n    light.position.set(1, 1, 1);\n    scene.add(light);\n\n    const ambientLight = new THREE.AmbientLight(0x404040);\n    scene.add(ambientLight);\n\n    // Position camera\n    camera.position.set(0, 10, 20);\n    camera.lookAt(0, 0, 0);\n\n    // Create kayaker\n    function createKayaker() {\n        const kayakerGroup = new THREE.Group();\n        \n        // Kayak body\n        const kayakGeometry = new THREE.CylinderGeometry(0.3, 0.3, 3, 8);\n        const kayakMaterial = new THREE.MeshStandardMaterial({ color: 0xFF0000 });\n        const kayak = new THREE.Mesh(kayakGeometry, kayakMaterial);\n        kayak.rotation.z = Math.PI / 2;\n        kayak.position.y = 0.5;\n        kayakerGroup.add(kayak);\n        \n        // Paddler\n        const paddlerGeometry = new THREE.CylinderGeometry(0.2, 0.2, 1, 8);\n        const paddlerMaterial = new THREE.MeshStandardMaterial({ color: 0x0000FF });\n        const paddler = new THREE.Mesh(paddlerGeometry, paddlerMaterial);\n        paddler.position.y = 1.5;\n        kayakerGroup.add(paddler);\n        \n        kayakerGroup.position.set(0, 0, 0);\n        return kayakerGroup;\n    }\n\n    const kayaker = createKayaker();\n    scene.add(kayaker);\n\n    // Kayaker movement\n    const kayakerSpeed = 0.1;\n    const kayakerRotationSpeed = 0.02;\n    let kayakerPosition = new THREE.Vector3(0, 0, 0);\n    let kayakerRotation = 0;\n\n    // Handle keyboard controls\n    const keys = {\n        ArrowLeft: false,\n        ArrowRight: false,\n        ArrowUp: false,\n        ArrowDown: false\n    };\n\n    window.addEventListener('keydown', (e) => {\n        if (keys.hasOwnProperty(e.key)) {\n            keys[e.key] = true;\n        }\n    });\n\n    window.addEventListener('keyup', (e) => {\n        if (keys.hasOwnProperty(e.key)) {\n            keys[e.key] = false;\n        }\n    });\n\n    // Animation loop\n    function animate() {\n        requestAnimationFrame(animate);\n\n        // Update water\n        if (river.material && river.material.uniforms) {\n            river.material.uniforms['time'].value += 1.0 / 60.0;\n        }\n\n        // Update sun position\n        const time = Date.now() * 0.001;\n        sunPosition.setFromSpherical(new THREE.Spherical(1, 0.5, time));\n        sunDirection.copy(sunPosition).normalize();\n        \n        if (river.material && river.material.uniforms) {\n            river.material.uniforms['sunDirection'].value.copy(sunDirection);\n        }\n\n        // Update kayaker position\n        if (keys.ArrowLeft) kayakerRotation += kayakerRotationSpeed;\n        if (keys.ArrowRight) kayakerRotation -= kayakerRotationSpeed;\n        if (keys.ArrowUp) {\n            kayakerPosition.x += Math.sin(kayakerRotation) * kayakerSpeed;\n            kayakerPosition.z += Math.cos(kayakerRotation) * kayakerSpeed;\n        }\n        if (keys.ArrowDown) {\n            kayakerPosition.x -= Math.sin(kayakerRotation) * kayakerSpeed;\n            kayakerPosition.z -= Math.cos(kayakerRotation) * kayakerSpeed;\n        }\n\n        kayaker.position.copy(kayakerPosition);\n        kayaker.rotation.y = kayakerRotation;\n\n        // Update camera to follow kayaker\n        camera.position.set(\n            kayakerPosition.x,\n            10,\n            kayakerPosition.z + 20\n        );\n        camera.lookAt(kayakerPosition);\n\n        renderer.render(scene, camera);\n    }\n\n    // Handle window resize\n    window.addEventListener('resize', onWindowResize, false);\n\n    function onWindowResize() {\n        camera.aspect = window.innerWidth / window.innerHeight;\n        camera.updateProjectionMatrix();\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.setPixelRatio(window.devicePixelRatio);\n    }\n\n    // Start the animation\n    animate();\n}).catch(error => {\n    console.error('Error loading modules:', error);\n}); "],"file":"assets/index-D8gR_AL4.js"}