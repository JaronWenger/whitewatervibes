{"version":3,"file":"index-qsjyLTiI.js","sources":["../../main.js"],"sourcesContent":["// Import dependencies and initialize\nimport * as THREE from 'three';\nimport { Water } from 'three/examples/jsm/objects/Water.js';\nimport { Sky } from 'three/examples/jsm/objects/Sky.js';\n\n// Prevent scrolling\nwindow.addEventListener('scroll', (e) => {\n    e.preventDefault();\n    window.scrollTo(0, 0);\n}, { passive: false });\n\nwindow.addEventListener('touchmove', (e) => {\n    e.preventDefault();\n}, { passive: false });\n\nwindow.addEventListener('wheel', (e) => {\n    e.preventDefault();\n}, { passive: false });\n\n// Create scene, camera, and renderer\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\nconst renderer = new THREE.WebGLRenderer({ \n    antialias: true,\n    alpha: true\n});\n\n// Set renderer size and position\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.setClearColor(0x000000, 0);\nrenderer.toneMapping = THREE.ACESFilmicToneMapping;\nrenderer.toneMappingExposure = 1;\n\n// Append renderer to body and ensure it's positioned correctly\ndocument.body.appendChild(renderer.domElement);\nrenderer.domElement.style.position = 'fixed';\nrenderer.domElement.style.top = '0';\nrenderer.domElement.style.left = '0';\nrenderer.domElement.style.width = '100%';\nrenderer.domElement.style.height = '100%';\n\n// Create river\nconst riverGeometry = new THREE.PlaneGeometry(100, 1000);\nconst waterNormals = new THREE.TextureLoader().load('/whitewatervibes/textures/waternormals.jpg', \n    function(texture) {\n        texture.wrapS = texture.wrapT = THREE.RepeatWrapping;\n        texture.repeat.set(4, 4);\n        console.log('Water normals texture loaded successfully');\n    },\n    undefined,\n    function(error) {\n        console.error('Error loading water normals texture:', error);\n    }\n);\n\nconst river = new Water(riverGeometry, {\n    textureWidth: 512,\n    textureHeight: 512,\n    waterNormals: waterNormals,\n    sunDirection: new THREE.Vector3(),\n    sunColor: 0xffffff,\n    waterColor: 0x006994,\n    distortionScale: 3.7,\n    fog: scene.fog !== undefined\n});\n\n// Initialize water uniforms\nif (river.material && river.material.uniforms) {\n    river.material.uniforms['time'].value = 0;\n    river.material.uniforms['sunDirection'].value.set(0, 1, 0);\n    console.log('Water uniforms initialized successfully');\n} else {\n    console.error('Water material or uniforms not initialized properly');\n}\n\nriver.rotation.x = -Math.PI / 2;\nriver.position.y = 0;\nscene.add(river);\n\n// Create canyon walls\nconst canyonMaterial = new THREE.MeshStandardMaterial({ \n    color: 0x8B4513,\n    roughness: 0.8,\n    metalness: 0.2\n});\n\n// Left wall\nconst leftWall = new THREE.Mesh(\n    new THREE.PlaneGeometry(1000, 100),\n    canyonMaterial\n);\nleftWall.position.set(-50, 50, 0);\nleftWall.rotation.y = Math.PI / 2;\nscene.add(leftWall);\n\n// Right wall\nconst rightWall = new THREE.Mesh(\n    new THREE.PlaneGeometry(1000, 100),\n    canyonMaterial\n);\nrightWall.position.set(50, 50, 0);\nrightWall.rotation.y = -Math.PI / 2;\nscene.add(rightWall);\n\n// Create trees\nfunction createTree(x, z) {\n    const treeGroup = new THREE.Group();\n    \n    // Tree trunk\n    const trunkGeometry = new THREE.CylinderGeometry(0.5, 0.8, 5, 8);\n    const trunkMaterial = new THREE.MeshStandardMaterial({ color: 0x4A2F10 });\n    const trunk = new THREE.Mesh(trunkGeometry, trunkMaterial);\n    trunk.position.y = 2.5;\n    treeGroup.add(trunk);\n    \n    // Tree top\n    const topGeometry = new THREE.ConeGeometry(3, 6, 8);\n    const topMaterial = new THREE.MeshStandardMaterial({ color: 0x2D5A27 });\n    const top = new THREE.Mesh(topGeometry, topMaterial);\n    top.position.y = 7;\n    treeGroup.add(top);\n    \n    treeGroup.position.set(x, 0, z);\n    return treeGroup;\n}\n\n// Add trees along the canyon walls\nfor (let i = -400; i <= 400; i += 50) {\n    scene.add(createTree(-45, i));\n    scene.add(createTree(45, i));\n}\n\n// Add sky\nconst sky = new Sky();\nsky.scale.setScalar(10000);\nscene.add(sky);\n\n// Initialize sun direction\nconst sunDirection = new THREE.Vector3();\nconst sunPosition = new THREE.Vector3();\n\n// Add lights\nconst light = new THREE.DirectionalLight(0xffffff, 1);\nlight.position.set(1, 1, 1);\nscene.add(light);\n\nconst ambientLight = new THREE.AmbientLight(0x404040);\nscene.add(ambientLight);\n\n// Position camera\ncamera.position.set(0, 10, 20);\ncamera.lookAt(0, 0, 0);\n\n// Create kayaker\nfunction createKayaker() {\n    const kayakerGroup = new THREE.Group();\n    \n    // Kayak body\n    const kayakGeometry = new THREE.CylinderGeometry(0.3, 0.3, 3, 8);\n    const kayakMaterial = new THREE.MeshStandardMaterial({ color: 0xFF0000 });\n    const kayak = new THREE.Mesh(kayakGeometry, kayakMaterial);\n    kayak.rotation.z = Math.PI / 2;\n    kayak.position.y = 0.5;\n    kayakerGroup.add(kayak);\n    \n    // Paddler\n    const paddlerGeometry = new THREE.CylinderGeometry(0.2, 0.2, 1, 8);\n    const paddlerMaterial = new THREE.MeshStandardMaterial({ color: 0x0000FF });\n    const paddler = new THREE.Mesh(paddlerGeometry, paddlerMaterial);\n    paddler.position.y = 1.5;\n    kayakerGroup.add(paddler);\n    \n    kayakerGroup.position.set(0, 0, 0);\n    return kayakerGroup;\n}\n\nconst kayaker = createKayaker();\nscene.add(kayaker);\n\n// Kayaker movement\nconst kayakerSpeed = 0.1;\nconst kayakerRotationSpeed = 0.02;\nlet kayakerPosition = new THREE.Vector3(0, 0, 0);\nlet kayakerRotation = 0;\n\n// Handle keyboard controls\nconst keys = {\n    ArrowLeft: false,\n    ArrowRight: false,\n    ArrowUp: false,\n    ArrowDown: false\n};\n\nwindow.addEventListener('keydown', (e) => {\n    if (keys.hasOwnProperty(e.key)) {\n        keys[e.key] = true;\n    }\n});\n\nwindow.addEventListener('keyup', (e) => {\n    if (keys.hasOwnProperty(e.key)) {\n        keys[e.key] = false;\n    }\n});\n\n// Animation loop\nfunction animate() {\n    requestAnimationFrame(animate);\n\n    // Update water\n    if (river.material && river.material.uniforms) {\n        river.material.uniforms['time'].value += 1.0 / 60.0;\n    }\n\n    // Update sun position\n    const time = Date.now() * 0.001;\n    sunPosition.setFromSpherical(new THREE.Spherical(1, 0.5, time));\n    sunDirection.copy(sunPosition).normalize();\n    \n    if (river.material && river.material.uniforms) {\n        river.material.uniforms['sunDirection'].value.copy(sunDirection);\n    }\n\n    // Update kayaker position\n    if (keys.ArrowLeft) kayakerRotation += kayakerRotationSpeed;\n    if (keys.ArrowRight) kayakerRotation -= kayakerRotationSpeed;\n    if (keys.ArrowUp) {\n        kayakerPosition.x += Math.sin(kayakerRotation) * kayakerSpeed;\n        kayakerPosition.z += Math.cos(kayakerRotation) * kayakerSpeed;\n    }\n    if (keys.ArrowDown) {\n        kayakerPosition.x -= Math.sin(kayakerRotation) * kayakerSpeed;\n        kayakerPosition.z -= Math.cos(kayakerRotation) * kayakerSpeed;\n    }\n\n    kayaker.position.copy(kayakerPosition);\n    kayaker.rotation.y = kayakerRotation;\n\n    // Update camera to follow kayaker\n    camera.position.set(\n        kayakerPosition.x,\n        10,\n        kayakerPosition.z + 20\n    );\n    camera.lookAt(kayakerPosition);\n\n    renderer.render(scene, camera);\n}\n\n// Handle window resize\nwindow.addEventListener('resize', onWindowResize, false);\n\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n}\n\n// Start the animation\nanimate(); "],"names":["scene","THREE.Scene","camera","THREE.PerspectiveCamera","renderer","THREE.WebGLRenderer","THREE.ACESFilmicToneMapping","riverGeometry","THREE.PlaneGeometry","waterNormals","THREE.TextureLoader","texture","THREE.RepeatWrapping","error","river","Water","THREE.Vector3","canyonMaterial","THREE.MeshStandardMaterial","leftWall","THREE.Mesh","rightWall","createTree","x","z","treeGroup","THREE.Group","trunkGeometry","THREE.CylinderGeometry","trunkMaterial","trunk","topGeometry","THREE.ConeGeometry","topMaterial","top","i","sky","Sky","sunDirection","sunPosition","light","THREE.DirectionalLight","ambientLight","THREE.AmbientLight","createKayaker","kayakerGroup","kayakGeometry","kayakMaterial","kayak","paddlerGeometry","paddlerMaterial","paddler","kayaker","kayakerSpeed","kayakerRotationSpeed","kayakerPosition","kayakerRotation","keys","animate","time","THREE.Spherical","onWindowResize"],"mappings":"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"}